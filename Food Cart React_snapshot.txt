# Code Repository Snapshot: Food Cart React

--------------------------------------------
Generated with reposnap v1.3.0
Project: https://github.com/akhshyganesh/reposnap#readme
Author: akhshyganesh
Generated on: 30/5/2025 at 8:06:27 pm
--------------------------------------------


üìÑ README.md
  ---
  # React + Vite
  
  This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
  
  Currently, two official plugins are available:
  
  - [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) for Fast Refresh
  - [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
  
  ## Expanding the ESLint configuration
  
  If you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.
  
  ---

üìÑ eslint.config.js
  ---
  import js from '@eslint/js'
  import globals from 'globals'
  import reactHooks from 'eslint-plugin-react-hooks'
  import reactRefresh from 'eslint-plugin-react-refresh'
  
  export default [
    { ignores: ['dist'] },
    {
      files: ['**/*.{js,jsx}'],
      languageOptions: {
        ecmaVersion: 2020,
        globals: globals.browser,
        parserOptions: {
          ecmaVersion: 'latest',
          ecmaFeatures: { jsx: true },
          sourceType: 'module',
        },
      },
      plugins: {
        'react-hooks': reactHooks,
        'react-refresh': reactRefresh,
      },
      rules: {
        ...js.configs.recommended.rules,
        ...reactHooks.configs.recommended.rules,
        'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
        'react-refresh/only-export-components': [
          'warn',
          { allowConstantExport: true },
        ],
      },
    },
  ]
  
  ---

üìÑ index.html
  ---
  <!doctype html>
  <html lang="en">
    <head>
      <meta charset="UTF-8" />
      <link rel="icon" type="image/svg+xml" href="/vite.svg" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <title>Vite + React</title>
    </head>
    <body>
      <div id="root"></div>
      <script type="module" src="/src/main.jsx"></script>
    </body>
  </html>
  
  ---

üìÅ public/
üìÅ src/
  üìÑ App.css
    ---
    .container{
      padding: 20px;
    }
    ---

  üìÑ App.jsx
    ---
    import { useState, createContext } from 'react'
    import reactLogo from './assets/react.svg'
    import viteLogo from '/vite.svg'
    import './App.css'
    import Header from './components/Header'
    import { BrowserRouter, Route, Routes } from 'react-router-dom'
    import Home from './components/Home'
    import Cart from './components/Cart'
    
    export const cartContext = createContext()
    function App() {
      const [cart, setcart] = useState([])
    
      return (
        <cartContext.Provider value={{cart, setcart}}>
            <BrowserRouter>
              <Header cart={cart} />
              <div className='containner'>
                <Routes>
                  <Route path='/' element={<Home />}></Route>
                  <Route path='/Cart' element={<Cart />}></Route>
                </Routes>
              </div>
            </BrowserRouter>
        </cartContext.Provider>
      )
    }
    
    export default App
    
    ---

  üìÅ assets/
    üìÑ Product.json
      ---
      [
          {
              "id": 1,
              "name": "Farmers Pick",
              "amt": "299",
              "shop": "Pizza Hut",
              "ftype": "Pizza",
              "pic": "https://www.app.tutorjoes.in/img/food/89.jpg",
              "latest": "No"
          },
          {
              "id": 2,
              "name": "Paper Roast Dosa",
              "amt": "65",
              "shop": "Sri Saivihar",
              "ftype": "Veg",
              "pic": "https://www.app.tutorjoes.in/img/food/124.jpg",
              "latest": "No"
          },
          {
              "id": 3,
              "name": "Alfredo Pasta",
              "amt": "185",
              "shop": "Nathan Food",
              "ftype": "Veg",
              "pic": "https://www.app.tutorjoes.in/img/food/26.jpg",
              "latest": "Yes"
          },
          {
              "id": 4,
              "name": "Chicken 65",
              "amt": "150",
              "shop": "Salem biriyani",
              "ftype": "Non-veg",
              "pic": "https://www.app.tutorjoes.in/img/food/9.jpg",
              "latest": "No"
          },
          {
              "id": 5,
              "name": "Momo Mia meal",
              "amt": "299",
              "shop": "Pizza Hut",
              "ftype": "Pizza",
              "pic": "https://www.app.tutorjoes.in/img/food/80.jpg",
              "latest": "No"
          },
          {
              "id": 6,
              "name": "Orange juice",
              "amt": "50",
              "shop": "Juice world",
              "ftype": "Juice",
              "pic": "https://www.app.tutorjoes.in/img/food/28.jpg",
              "latest": "No"
          },
          {
              "id": 7,
              "name": "Milk Halwa",
              "amt": "70",
              "shop": "Shri Gupta Bhavan",
              "ftype": "Sweet",
              "pic": "https://www.app.tutorjoes.in/img/food/67.jpg",
              "latest": "No"
          },
          {
              "id": 8,
              "name": "Vegetable soup",
              "amt": "123",
              "shop": "Sri Saivihar",
              "ftype": "Soup",
              "pic": "https://www.app.tutorjoes.in/img/food/120.jpg",
              "latest": "No"
          },    
          {
              "id": 9,
              "name": "Hydrabad Chicken Dry",
              "amt": "235",
              "shop": "Nathan Food",
              "ftype": "Non-veg",
              "pic": "https://www.app.tutorjoes.in/img/food/20.jpg",
              "latest": "No"
          }
          ,    
          {
              "id": 10,
              "name": "Spicy Chicken Afgani",
              "amt": "400",
              "shop": "Tandoori Wale",
              "ftype": "Non-veg",
              "pic": "https://www.app.tutorjoes.in/img/food/133.jpg",
              "latest": "No"
          },
          {
              "id": 11,
              "name": "Veg Seekh Kebab",
              "amt": "239",
              "shop": "Tandoori Wale",
              "ftype": "Veg",
              "pic": "https://www.app.tutorjoes.in/img/food/130.jpg",
              "latest": "Yes"
          },
          {
              "id": 12,
              "name": "Jam Roll Cake",
              "amt": "101",
              "shop": "Henry & Wolsey",
              "ftype": "Cake",
              "pic": "https://www.app.tutorjoes.in/img/food/58.jpg",
              "latest": "No"
          },
          {
              "id": 13,
              "name": "Malai Doda",
              "amt": "37",
              "shop": "Shri Gupta Bhavan",
              "ftype": "Veg",
              "pic": "https://www.app.tutorjoes.in/img/food/71.jpg",
              "latest": "No"
          },
          {
              "id": 14,
              "name": "Curd Vadai",
              "amt": "42",
              "shop": "Sri Saivihar",
              "ftype": "Veg",
              "pic": "https://www.app.tutorjoes.in/img/food/113.jpg",
              "latest": "No"
          },
          {
              "id": 15,
              "name": "Momo Mia Choco Sundae meal",
              "amt": "316",
              "shop": "Pizza Hut",
              "ftype": "Pizza",
              "pic": "https://www.app.tutorjoes.in/img/food/82.jpg",
              "latest": "No"
          },
          {
              "id": 16,
              "name": "classic Walnut Brownie",
              "amt": "153",
              "shop": "Shris Cake Zone",
              "ftype": "cake",
              "pic": "https://www.app.tutorjoes.in/img/food/64.jpg",
              "latest": "No"
          },
          {
              "id": 17,
              "name": "Cotton Candy Scoop",
              "amt": "99",
              "shop": "Cream & Fudge",
              "ftype": "IceCream",
              "pic": "https://www.app.tutorjoes.in/img/food/39.jpg",
              "latest": "Yes"
          },
          {
              "id": 18,
              "name": "Veg Extravaganza Pizza",
              "amt": "259",
              "shop": "Pizza Hut",
              "ftype": "Pizza",
              "pic": "https://www.app.tutorjoes.in/img/food/12.jpg",
              "latest": "No"
          },
          {
              "id": 19,
              "name": "Cream of Chicken Soup",
              "amt": "140",
              "shop": "Tandoori Wale",
              "ftype": "Soup",
              "pic": "https://www.app.tutorjoes.in/img/food/137.jpg",
              "latest": "No"
          },
          {
              "id": 20,
              "name": "Paratha",
              "amt": "23",
              "shop": "Pugal Tiffen Center",
              "ftype": "Veg",
              "pic": "https://www.app.tutorjoes.in/img/food/105.jpg",
              "latest": "No"
          }
          
      ]
      ---

  üìÅ components/
    üìÑ Cart.css
      ---
      
      .card-container{
          display: flex;
          flex-direction: column;
          padding: 10px;
      }
      
      .cart-product{
          display: flex;
          gap: 5px;
          align-items: center;
          margin-bottom: 10px;
          border: 1px solid #ccc;
      }
      
      .cart-product .img {
          width: 100px;
          height: 100px;
          flex-shrink: 0;
          overflow: hidden;
          border-radius: 8px;
      }
      
      .cart-product .img img {
          width: 100%;
          height: 100%;
          object-fit: cover;
      }
      
      
      .cart-heading, .cart-amt{
          font-size: 20px;
          font-weight: 600;
      }
      ---

    üìÑ Cart.jsx
      ---
      import React, { useContext, useEffect, useState } from 'react'
      import './Cart.css'
      import { Product } from './Product'
      import { cartContext } from '../App'
      const Cart = () => {
          const {cart} = useContext(cartContext)
        const [total, settotal] = useState(0)
        useEffect(() => {
          settotal(cart.reduce((acc,curr)=>acc+parseInt(curr.amt),0))
        }, [cart])
        return (
          <>
          <h1 className='cart-heading'>Cart Products</h1>
            <div className='cart-container'>
              {
                cart.map((product) => (
                  <div className='cart-product' key={product.id}>
                    <div className='img'>
                      <img src={product.pic} alt="image" />
                    </div>
                    <div className='cart-product-details'>
                      <h3>{product.name}</h3>
                      <p>Price Rs: {product.amt}</p>
                    </div>
                  </div>
                ))
              }
            </div>
            <h2 className='cart-amt'>Total Amount Rs: {total}</h2>
          </>
        )
      }
      
      export default Cart
      
      ---

    üìÑ Header.css
      ---
      .navbar {
          width: 100%;
          height: 50px;
          background-color: #222;
          display: flex;
          align-items: center;
          justify-content: space-between;
          padding: 0px 20px;
      }
      
      .logo {
          color: #fff;
          font-size: 20px;
      }
      
      .navbar ul {
          display: inline-flex;
          gap: 10px;
      }
      
      .navbar ul li {
          list-style-type: none;
      }
      
      .navbar ul li a {
          color: #fff;
          text-decoration: none;
      }
      
      .cart-count{
          background-color: rgb(3,4,80);
          padding: 5px;
          border-radius: 50%;
          height: 20px;
          width: 20px;
          display: inline-block;
          font-size: 12px;
          text-align: center;
      }
      ---

    üìÑ Header.jsx
      ---
      import React from 'react'
      import './Header.css'
      import { Link } from 'react-router-dom'
      const Header = ({cart}) => {
        return (
          <div className='navbar'>
            <div className='logo'>Food Cart</div>
            <ul>
              <li>
                  <Link to={"/"}>Home</Link>
              </li>
              <li>
                  <Link to={"/Cart"}><span className='cart-count'>{cart.length}</span>View Cart</Link>
              </li>
            </ul>
          </div>
        )
      }
      
      export default Header
      
      ---

    üìÑ Home.css
      ---
      .product-container{
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        justify-content: center;
      }
      ---

    üìÑ Home.jsx
      ---
      import React, { useState } from 'react'
      import data from '../assets/Product.json'
      import{Product} from '../components/Product'
      import './Home.css'
      const Home = () => {
          const [products] = useState(data)
        return (
          <div className='product-container'>
            {products.map((product)=>(
              <Product key={product.id} product={product}/>
            ))}
          </div>
        )
      }
      
      export default Home
      
      ---

    üìÑ Product.css
      ---
      .product{
          width: 200px;
          height: 250px;
          border: 1px solid #ccc;
      }
      
      .product .img{
        width: 100%;
        height: 150px;
      }
      
      .product .img img{
          width: 100%;
          height: 100%;
          object-fit: cover;
      }
      
      .details{
          padding: 5px;
      }
      
      .details h3{
          margin-bottom: 10px;
          font-size: 14px;
      }
      
      .details p{
          font-size: 14px;
          font-weight: 500;
          color: #888;
      }
      .details button{
          margin-top: 5px;
          padding: 5px 10px;
          background-color: teal;
          color: #fff;
          border: none;
          border-radius: 3px;
      }
      
      .details button:hover{
          background-color: rgb(2, 104, 104);
      }
      
      .btnremove{
          background-color: #cf3d3d !important;
      }
      ---

    üìÑ Product.jsx
      ---
      import React, { useContext } from 'react'
      import './Product.css'
      import { cartContext } from '../App';
      
      
      export const Product = ({ product }) => {
      
        const {cart, setcart} = useContext(cartContext)
        const name = product.name.length > 21 ? product.name.substring(0, 20) + ".." : product.name;
        const addcart = () => {
          setcart([...cart,product])
         }
        const removecart = () => {
          setcart(cart.filter((c) => c.id !== product.id))
         }
        return (
          <div className='product'>
            <div className='img'>
              <img src={product.pic} alt={product.name} />
            </div>
            <div className='details'>
              <h3>{name}</h3>
              <p>Price Rs:{product.amt}</p>
              {
                cart.includes(product) ?
                  <button className='btnremove' onClick={removecart}>Remove From Cart</button>
                  : <button onClick={addcart}>Add to Cart</button>
              }
            </div>
          </div>
        )
      }
      
      ---

  üìÑ index.css
    ---
    @import url("https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap");
    
    *{
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: "Roboto", sans-serif;
    }
    ---

  üìÑ main.jsx
    ---
    import { StrictMode } from 'react'
    import { createRoot } from 'react-dom/client'
    import './index.css'
    import App from './App.jsx'
    
    createRoot(document.getElementById('root')).render(
      <StrictMode>
        <App />
      </StrictMode>,
    )
    
    ---

üìÑ vite.config.js
  ---
  import { defineConfig } from 'vite'
  import react from '@vitejs/plugin-react'
  
  // https://vite.dev/config/
  export default defineConfig({
    plugins: [react()],
  })
  
  ---


# Snapshot Summary
Total files processed: 17
